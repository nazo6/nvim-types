{
 "leftTitle": "Global Functions",
 "rightTitle": "api-global",
 "description": "",
 "data": [
  {
   "type": "func",
   "name": "nvim__get_hl_defs",
   "description": "TODO: Documentation",
   "argsStr": "{ns_id}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim__get_lib_dir",
   "description": "TODO: Documentation",
   "argsStr": "",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim__id",
   "description": "Returns object given as argument.",
   "argsStr": "{obj}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim__id_array",
   "description": "Returns array given as argument.",
   "argsStr": "{arr}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim__id_dictionary",
   "description": "Returns dictionary given as argument.",
   "argsStr": "{dct}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim__id_float",
   "description": "Returns floating-point value given as argument.",
   "argsStr": "{flt}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim__inspect_cell",
   "description": "TODO: Documentation",
   "argsStr": "{grid}, {row}, {col}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim__screenshot",
   "description": "TODO: Documentation",
   "argsStr": "{path}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim__stats",
   "description": "Gets internal stats.",
   "argsStr": "",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_call_atomic",
   "description": "Calls many API methods atomically.",
   "argsStr": "{calls}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_call_dict_function",
   "description": "Calls a VimL |Dictionary-function| with the given arguments.",
   "argsStr": "{dict}, {fn}, {args}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_call_function",
   "description": "Calls a VimL function with the given arguments.",
   "argsStr": "{fn}, {args}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_command",
   "description": "Executes an ex-command.",
   "argsStr": "{command}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_create_buf",
   "description": "Creates a new, empty, unnamed buffer.",
   "argsStr": "{listed}, {scratch}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_create_namespace",
   "description": "Creates a new namespace, or gets an existing one.",
   "argsStr": "{name}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_del_current_line",
   "description": "Deletes the current line.",
   "argsStr": "",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_del_keymap",
   "description": "Unmaps a global |mapping| for the given mode.",
   "argsStr": "{mode}, {lhs}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_del_var",
   "description": "Removes a global (g:) variable.",
   "argsStr": "{name}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_echo",
   "description": "Echo a message.",
   "argsStr": "{chunks}, {history}, {opts}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_err_write",
   "description": "Writes a message to the Vim error buffer. Does not append\n                \"\\n\", the message is buffered (won't display) until a linefeed\n                is written.",
   "argsStr": "{str}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_err_writeln",
   "description": "Writes a message to the Vim error buffer. Appends \"\\n\", so the\n                buffer is flushed (and displayed).",
   "argsStr": "{str}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_eval",
   "description": "Evaluates a VimL |expression|. Dictionaries and Lists are\n                recursively expanded.",
   "argsStr": "{expr}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_exec",
   "description": "Executes Vimscript (multiline block of Ex-commands), like\n                anonymous |:source|.",
   "argsStr": "{src}, {output}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_exec_lua",
   "description": "Execute Lua code. Parameters (if any) are available as `...`\n                inside the chunk. The chunk can return a value.",
   "argsStr": "{code}, {args}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_feedkeys",
   "description": "Sends input-keys to Nvim, subject to various quirks controlled\n                by `mode` flags. This is a blocking call, unlike\n                |nvim_input()|.",
   "argsStr": "{keys}, {mode}, {escape_csi}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_all_options_info",
   "description": "Gets the option information for all options.",
   "argsStr": "",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_api_info",
   "description": "Returns a 2-tuple (Array), where item 0 is the current channel\n                id and item 1 is the |api-metadata| map (Dictionary).",
   "argsStr": "",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_chan_info",
   "description": "Get information about a channel.",
   "argsStr": "{chan}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_color_by_name",
   "description": "Returns the 24-bit RGB value of a |nvim_get_color_map()| color\n                name or \"#rrggbb\" hexadecimal string.",
   "argsStr": "{name}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_color_map",
   "description": "Returns a map of color names and RGB values.",
   "argsStr": "",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_commands",
   "description": "Gets a map of global (non-buffer-local) Ex commands.",
   "argsStr": "{opts}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_context",
   "description": "Gets a map of the current editor state.",
   "argsStr": "{opts}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_current_buf",
   "description": "Gets the current buffer.",
   "argsStr": "",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_current_line",
   "description": "Gets the current line.",
   "argsStr": "",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_current_tabpage",
   "description": "Gets the current tabpage.",
   "argsStr": "",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_current_win",
   "description": "Gets the current window.",
   "argsStr": "",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_hl_by_id",
   "description": "Gets a highlight definition by id. |hlID()|",
   "argsStr": "{hl_id}, {rgb}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_hl_by_name",
   "description": "Gets a highlight definition by name.",
   "argsStr": "{name}, {rgb}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_hl_id_by_name",
   "description": "Gets a highlight group by name",
   "argsStr": "{name}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_keymap",
   "description": "Gets a list of global (non-buffer-local) |mapping|\n                definitions.",
   "argsStr": "{mode}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_mode",
   "description": "Gets the current mode. |mode()| \"blocking\" is true if Nvim is\n                waiting for input.",
   "argsStr": "",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_namespaces",
   "description": "Gets existing, non-anonymous namespaces.",
   "argsStr": "",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_option",
   "description": "Gets an option value string.",
   "argsStr": "{name}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_option_info",
   "description": "Gets the option information for one option",
   "argsStr": "{name}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_proc",
   "description": "Gets info describing process `pid` .",
   "argsStr": "{pid}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_proc_children",
   "description": "Gets the immediate children of process `pid` .",
   "argsStr": "{pid}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_runtime_file",
   "description": "Find files in runtime directories",
   "argsStr": "{name}, {all}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_var",
   "description": "Gets a global (g:) variable.",
   "argsStr": "{name}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_get_vvar",
   "description": "Gets a v: variable.",
   "argsStr": "{name}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_input",
   "description": "Queues raw user-input. Unlike |nvim_feedkeys()|, this uses a\n                low-level input buffer and the call is non-blocking (input is\n                processed asynchronously by the eventloop).",
   "argsStr": "{keys}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_input_mouse",
   "description": "Send mouse event from GUI.",
   "argsStr": "{button}, {action}, {modifier}, {grid}, {row}, {col}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_list_bufs",
   "description": "Gets the current list of buffer handles",
   "argsStr": "",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_list_chans",
   "description": "Get information about all open channels.",
   "argsStr": "",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_list_runtime_paths",
   "description": "Gets the paths contained in 'runtimepath'.",
   "argsStr": "",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_list_tabpages",
   "description": "Gets the current list of tabpage handles.",
   "argsStr": "",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_list_uis",
   "description": "Gets a list of dictionaries representing attached UIs.",
   "argsStr": "",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_list_wins",
   "description": "Gets the current list of window handles.",
   "argsStr": "",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_load_context",
   "description": "Sets the current editor state from the given |context| map.",
   "argsStr": "{dict}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_notify",
   "description": "Notify the user with a message",
   "argsStr": "{msg}, {log_level}, {opts}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_open_win",
   "description": "Open a new window.",
   "argsStr": "{buffer}, {enter}, {config}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_out_write",
   "description": "Writes a message to the Vim output buffer. Does not append\n                \"\\n\", the message is buffered (won't display) until a linefeed\n                is written.",
   "argsStr": "{str}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_parse_expression",
   "description": "Parse a VimL expression.",
   "argsStr": "{expr}, {flags}, {highlight}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_paste",
   "description": "Pastes at cursor, in any mode.",
   "argsStr": "{data}, {crlf}, {phase}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_put",
   "description": "Puts text at cursor, in any mode.",
   "argsStr": "{lines}, {type}, {after}, {follow}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_replace_termcodes",
   "description": "Replaces terminal codes and |keycodes| (<CR>, <Esc>, ...) in a\n                string with the internal representation.",
   "argsStr": "{str}, {from_part}, {do_lt}, {special}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_select_popupmenu_item",
   "description": "Selects an item in the completion popupmenu.",
   "argsStr": "{item}, {insert}, {finish}, {opts}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_set_client_info",
   "description": "Self-identifies the client.",
   "argsStr": "{name}, {version}, {type}, {methods}, {attributes}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_set_current_buf",
   "description": "Sets the current buffer.",
   "argsStr": "{buffer}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_set_current_dir",
   "description": "Changes the global working directory.",
   "argsStr": "{dir}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_set_current_line",
   "description": "Sets the current line.",
   "argsStr": "{line}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_set_current_tabpage",
   "description": "Sets the current tabpage.",
   "argsStr": "{tabpage}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_set_current_win",
   "description": "Sets the current window.",
   "argsStr": "{window}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_set_decoration_provider",
   "description": "Set or change decoration provider for a namespace",
   "argsStr": "{ns_id}, {opts}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_set_hl",
   "description": "Set a highlight group.",
   "argsStr": "{ns_id}, {name}, {val}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_set_hl_ns",
   "description": "Set active namespace for highlights.",
   "argsStr": "{ns_id}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_set_keymap",
   "description": "Sets a global |mapping| for the given mode.",
   "argsStr": "{mode}, {lhs}, {rhs}, {opts}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_set_option",
   "description": "Sets an option value.",
   "argsStr": "{name}, {value}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_set_var",
   "description": "Sets a global (g:) variable.",
   "argsStr": "{name}, {value}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_set_vvar",
   "description": "Sets a v: variable, if it is not readonly.",
   "argsStr": "{name}, {value}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_strwidth",
   "description": "Calculates the number of display cells occupied by `text` .\n                <Tab> counts as one cell.",
   "argsStr": "{text}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_subscribe",
   "description": "Subscribes to event broadcasts.",
   "argsStr": "{event}",
   "returnType": "any"
  },
  {
   "type": "func",
   "name": "nvim_unsubscribe",
   "description": "Unsubscribes to event broadcasts.",
   "argsStr": "{event}",
   "returnType": "any"
  }
 ]
}